kubectl apply --recursive -f kubernetes

 # Clone the helloworld-infrastructure-staging repo.
  - name: 'gcr.io/hightowerlabs/hub'
    env:
      - 'HUB_CONFIG=/config/hub'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")
        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper 
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"
        hub clone "${_GITHUB_USERNAME}/helloworld-infrastructure-staging"
        cd helloworld-infrastructure-staging
        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: helloworld
                  image: gcr.io/${PROJECT_ID}/helloworld:${COMMIT_SHA}
        EOF
        kubectl patch --local -o yaml \
          -f kubernetes/deployments/helloworld.yaml \
          -p "$(cat patch.yaml)" \
          > helloworld.yaml
        mv helloworld.yaml kubernetes/deployments/helloworld.yaml
        hub add kubernetes/deployments/helloworld.yaml
              
        hub commit -F- <<EOF
        Update the helloworld application
        This commit updates the helloworld deployment container image to:
            gcr.io/${PROJECT_ID}/helloworld:${COMMIT_SHA}.
        Build ID: ${BUILD_ID}
        EOF
        hub push origin master

in one repo , checkout and patch the version of the other repo